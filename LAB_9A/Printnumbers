class PrintNumbers {
    private static final Object lock = new Object();
    private static int currentNumber = 1;

    public static void main(String[] args) {
        Thread printTwoThread = new Thread(new PrintTwo());
        Thread printThreeThread = new Thread(new PrintThree());
        Thread printFourThread = new Thread(new PrintFour());
        Thread printFiveThread = new Thread(new PrintFive());
        Thread printNumberThread = new Thread(new PrintNumber());

        printTwoThread.start();
        printThreeThread.start();
        printFourThread.start();
        printFiveThread.start();
        printNumberThread.start();
    }

    static class PrintTwo implements Runnable {
        public void run() {
            while (currentNumber <= 15) {
                synchronized (lock) {
                    if (currentNumber <= 15 && currentNumber % 2 == 0) {
                        System.out.println("Number " + currentNumber + " is divisible by 2.");
                    }
                    currentNumber++;
                    lock.notifyAll();
                    try {
                        if (currentNumber <= 15) {
                            lock.wait();
                        }
                    } catch (InterruptedException e) {
                        Thread.currentThread().interrupt();
                    }
                }
            }
        }
    }

    static class PrintThree implements Runnable {
        public void run() {
            while (currentNumber <= 15) {
                synchronized (lock) {
                    if (currentNumber <= 15 && currentNumber % 3 == 0) {
                        System.out.println("Number " + currentNumber + " is divisible by 3.");
                    }
                    currentNumber++;
                    lock.notifyAll();
                    try {
                        if (currentNumber <= 15) {
                            lock.wait();
                        }
                    } catch (InterruptedException e) {
                        Thread.currentThread().interrupt();
                    }
                }
            }
        }
    }

    static class PrintFour implements Runnable {
        public void run() {
            while (currentNumber <= 15) {
                synchronized (lock) {
                    if (currentNumber <= 15 && currentNumber % 4 == 0) {
                        System.out.println("Number " + currentNumber + " is divisible by 4.");
                    }
                    currentNumber++;
                    lock.notifyAll();
                    try {
                        if (currentNumber <= 15) {
                            lock.wait();
                        }
                    } catch (InterruptedException e) {
                        Thread.currentThread().interrupt();
                    }
                }
            }
        }
    }

    static class PrintFive implements Runnable {
        public void run() {
            while (currentNumber <= 15) {
                synchronized (lock) {
                    if (currentNumber <= 15 && currentNumber % 5 == 0) {
                        System.out.println("Number " + currentNumber + " is divisible by 5.");
                    }
                    currentNumber++;
                    lock.notifyAll();
                    try {
                        if (currentNumber <= 15) {
                            lock.wait();
                        }
                    } catch (InterruptedException e) {
                        Thread.currentThread().interrupt();
                    }
                }
            }
        }
    }

    static class PrintNumber implements Runnable {
        public void run() {
            while (currentNumber <= 15) {
                synchronized (lock) {
                    if (currentNumber <= 15 && currentNumber % 2 != 0 && currentNumber % 3 != 0 && currentNumber % 4 != 0 && currentNumber % 5 != 0) {
                        System.out.println("Number: " + currentNumber);
                    }
                    currentNumber++;
                    lock.notifyAll();
                    try {
                        if (currentNumber <= 15) {
                            lock.wait();
                        }
                    } catch (InterruptedException e) {
                        Thread.currentThread().interrupt();
                    }
                }
            }
        }
    }
}
